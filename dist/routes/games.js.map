{"version":3,"sources":["../../server/routes/games.js"],"names":["express","require","router","Router","User","Game","client","process","env","IGDB_KEY","get","req","res","searchResults","games","fields","search","params","game","filters","console","limit","offset","then","response","result","body","forEach","cover","coverImage","image","cloudinary_id","screenShots","screenshots","map","screenshot","screenShotURL","push","concat","id","name","summary","gameConsole","json","JSON","stringify","catch","error","allGames","regSearch","filter","RegExp","toLowerCase","findOne","username","session","user","lean","find","$ne","_id","populate","gamesList","owner","match","path","model","userGames","Array","from","gameOwner","post","newGame","newGames","gameObj","toObject","mongoId","findOneAndUpdate","save","err","findById","remove","module","exports"],"mappings":"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","file":"games.js","sourcesContent":["import igdb from 'igdb-api-node';\r\n\r\nconst express = require('express');\r\nconst router = express.Router();\r\n\r\nconst User = require('../models/user');\r\nconst Game = require('../models/game');\r\n\r\nconst client = igdb(process.env.IGDB_KEY);\r\n\r\nrouter.get('/findGame/:console/:game', (req, res) => {\r\n  let searchResults = [];\r\n\r\n  client.games({\r\n    fields: ['id', 'name', 'cover', 'summary', 'developers', 'screenshots'],\r\n    // fields: '*',\r\n    search: req.params.game,\r\n    filters: {\r\n      'release_dates.platform-eq': req.params.console,\r\n    },\r\n    limit: 15, // Limit to 5 results\r\n    offset: 0 // Index offset for results\r\n  }).then((response) => {\r\n    const result = response.body;\r\n\r\n    result.forEach((game) => {\r\n      if (game.cover) {\r\n        const coverImage = client.image({\r\n          cloudinary_id: game.cover.cloudinary_id},\r\n        'cover_small',\r\n        'jpg'\r\n        );\r\n\r\n        // convert and add screenshots\r\n        const screenShots = [];\r\n\r\n        if (game.screenshots) {\r\n          game.screenshots.map((screenshot) => {\r\n            const screenShotURL = client.image({\r\n              cloudinary_id: screenshot.cloudinary_id},\r\n            'screenshot_med',\r\n            'jpg'\r\n            );\r\n            screenShots.push(screenShotURL);\r\n          });\r\n        }\r\n\r\n        searchResults = searchResults.concat([\r\n          {\r\n            id: game.id,\r\n            name: game.name,\r\n            summary: game.summary,\r\n            cover: coverImage,\r\n            gameConsole: req.params.console,\r\n            screenshots: screenShots,\r\n          }]);\r\n      }\r\n    });\r\n\r\n    res.json(JSON.stringify(searchResults));\r\n  }).catch((error) => {\r\n    throw error;\r\n  });\r\n});\r\n\r\nrouter.get('/getAllGames/:filter', (req, res) => {\r\n  let allGames = [];\r\n  let regSearch;\r\n\r\n  if (req.params.filter === 'nofilter') {\r\n    regSearch = /[a-zA-Z0-9]/;\r\n  } else {\r\n    regSearch = new RegExp(req.params.filter.toLowerCase());\r\n  }\r\n\r\n  User.findOne({username: req.session.user}).lean()\r\n    .then(user => {\r\n      return Game.find({'owner': {$ne: user._id}}).lean()\r\n        .populate('owner')\r\n        .limit(36);\r\n    }).then(games => {\r\n\r\n      let gamesList = games.filter(game => {\r\n        //strips out password info and only sends back id and username to client\r\n        let username = game.owner.username;\r\n        let id = game.owner._id;\r\n        game.owner = {username, id};\r\n\r\n        if (req.params.filter !== 'nofilter') {\r\n          if (game.name.toLowerCase().match(regSearch)) {\r\n                return game;\r\n          }\r\n        } else {\r\n          return game;\r\n        }\r\n      });\r\n      res.json(gamesList);\r\n    });\r\n});\r\n\r\nrouter.get('/getUserGames', (req, res) => {\r\n  User.findOne({username: req.session.user})\r\n    .populate({\r\n      path: 'games',\r\n      populate: {\r\n        path: 'owner',\r\n        model: 'users'\r\n      }\r\n    }).then((user) => {\r\n      if (user.games) {\r\n        let userGames = Array.from(user.games);\r\n        userGames.map(game => {\r\n          let gameOwner = game.owner.username;\r\n          game.owner = gameOwner;\r\n        });\r\n        res.json(userGames);\r\n      } else {\r\n        res.json([]);\r\n      }\r\n    });\r\n});\r\n\r\nrouter.post('/addGame', (req, res) => {\r\n  User.findOne({username: req.session.user})\r\n    .then((user) => {\r\n      const newGame = new Game({\r\n        screenshots: req.body[0].screenshots,\r\n        gameConsole: req.body[0].gameConsole,\r\n        cover: req.body[0].cover,\r\n        summary: req.body[0].summary,\r\n        id: req.body[0].id,\r\n        name: req.body[0].name,\r\n        owner: user,\r\n      });\r\n\r\n      let newGames = user.games;\r\n      newGames.push(newGame);\r\n\r\n      let gameObj = newGame.toObject();\r\n      gameObj.mongoId = newGame._id;\r\n      gameObj.owner = user.username;\r\n\r\n      User.findOneAndUpdate({username: req.session.user}, {games: newGames})\r\n        .then(() => {\r\n          newGame.save();\r\n          res.json([gameObj]);\r\n        });\r\n     // user.games.push(newGame);\r\n\r\n\r\n     /*\r\n      newGame.save()\r\n        .then(() => {\r\n          user.save()\r\n          res.json([gameObj]);\r\n        });*/\r\n      // Promise.all with save() causes issues with mongoose\r\n      /*\r\n      Promise.all([newGame.save(), user.save()])\r\n        .then(() => {\r\n          res.json([gameObj]);\r\n        });*/\r\n    }).catch(err => {throw err;});\r\n});\r\n\r\nrouter.post('/removeGame', (req, res) => {\r\n  Game.findById(req.body.mongoId)\r\n    .then((game) => {\r\n      game.remove();\r\n      User.findOne({username: req.session.user})\r\n        .populate('games')\r\n        .then((user) => {\r\n          res.json(user.games);\r\n        });\r\n    });\r\n});\r\n\r\nmodule.exports = router;\r\n"]}