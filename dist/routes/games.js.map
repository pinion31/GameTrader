{"version":3,"sources":["../../server/routes/games.js"],"names":["express","require","router","Router","User","client","process","env","IGDB_KEY","get","req","res","searchResults","games","fields","search","params","game","filters","console","limit","offset","then","response","result","body","forEach","cover","coverImage","image","cloudinary_id","screenShots","screenshots","map","screenshot","screenShotURL","push","concat","id","name","summary","gameConsole","json","JSON","stringify","catch","error","allGames","regSearch","filter","RegExp","toLowerCase","find","lean","users","user","length","owner","session","userGame","match","err","findOne","username","post","gametoAdd","Array","from","findOneAndUpdate","$push","modifiedUser","Object","assign","newGameColl","module","exports"],"mappings":"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","file":"games.js","sourcesContent":["import igdb from 'igdb-api-node';\r\n\r\nconst express = require('express');\r\nconst router = express.Router();\r\n\r\nconst User = require('../models/user');\r\n\r\nconst client = igdb(process.env.IGDB_KEY);\r\n\r\nrouter.get('/findGame/:console/:game', (req, res) => {\r\n  let searchResults = [];\r\n\r\n  client.games({\r\n    fields: ['id', 'name', 'cover', 'summary', 'developers', 'screenshots'],\r\n    // fields: '*',\r\n    search: req.params.game,\r\n    filters: {\r\n      'release_dates.platform-eq': req.params.console,\r\n    },\r\n    limit: 15, // Limit to 5 results\r\n    offset: 0 // Index offset for results\r\n  }).then((response) => {\r\n    const result = response.body;\r\n\r\n    result.forEach((game) => {\r\n      if (game.cover) {\r\n        const coverImage = client.image({\r\n          cloudinary_id: game.cover.cloudinary_id},\r\n        'cover_small',\r\n        'jpg'\r\n        );\r\n\r\n        // convert and add screenshots\r\n        const screenShots = [];\r\n\r\n        if (game.screenshots) {\r\n          game.screenshots.map((screenshot) => {\r\n            const screenShotURL = client.image({\r\n              cloudinary_id: screenshot.cloudinary_id},\r\n            'screenshot_med',\r\n            'jpg'\r\n            );\r\n            screenShots.push(screenShotURL);\r\n          });\r\n        }\r\n\r\n        searchResults = searchResults.concat([\r\n          {\r\n            id: game.id,\r\n            name: game.name,\r\n            summary: game.summary,\r\n            cover: coverImage,\r\n            gameConsole: req.params.console,\r\n            screenshots: screenShots,\r\n          }]);\r\n      }\r\n    });\r\n\r\n    res.json(JSON.stringify(searchResults));\r\n  }).catch((error) => {\r\n    throw error;\r\n  });\r\n});\r\n\r\nrouter.get('/getAllGames/:filter', (req, res) => {\r\n  let allGames = [];\r\n  let regSearch;\r\n\r\n  if (req.params.filter === 'nofilter') {\r\n    regSearch = /[a-zA-Z0-9]/;\r\n  } else {\r\n    regSearch = new RegExp(req.params.filter.toLowerCase());\r\n  }\r\n\r\n  User.find({}).lean()\r\n    .then((users) => {\r\n      users.forEach((user) => {\r\n        if (user.games.length > 0) {\r\n          if (user.games[0].owner != req.session.user) {\r\n            const userGame = user.games.filter((game) => {\r\n              if (game.name.toLowerCase().match(regSearch)) {\r\n                return game;\r\n              }\r\n            });\r\n\r\n            allGames = allGames.concat(userGame);\r\n          }\r\n        }\r\n      });\r\n\r\n  res.json(allGames);\r\n    }).catch((err) => {\r\n      throw err;\r\n    });\r\n});\r\n\r\nrouter.get('/getUserGames', (req, res) => {\r\n  User.findOne({username: req.session.user}).lean()\r\n    .then((user) => {\r\n      if (user.games) {\r\n        res.json(user.games);\r\n      } else {\r\n        res.json([]);\r\n      }\r\n    });\r\n});\r\n\r\nrouter.post('/addGame', (req, res) => {\r\n  const gametoAdd = Array.from(req.body);\r\n  gametoAdd[0].owner = req.session.user; // append owner info to added game\r\n\r\n  User.findOneAndUpdate({username: req.session.user}, {$push: {games: gametoAdd[0]}})\r\n    .then(() => {\r\n      res.json(req.body);\r\n    });\r\n});\r\n\r\nrouter.post('/removeGame', (req, res) => {\r\n  User.findOne({username: req.session.user}).lean()\r\n    .then((user) => {\r\n      const modifiedUser = Object.assign({}, user);\r\n\r\n      const newGameColl = Array.from(modifiedUser.games).filter((game) => {\r\n        if (req.body.id != game.id) {\r\n          return game;\r\n        }\r\n      });\r\n\r\n      User.findOneAndUpdate({username: req.session.user}, {games: newGameColl})\r\n        .then(() => {\r\n          res.json(newGameColl);\r\n        });\r\n    });\r\n});\r\n\r\nmodule.exports = router;\r\n"]}