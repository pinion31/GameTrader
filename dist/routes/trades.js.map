{"version":3,"sources":["../../server/routes/trades.js"],"names":["express","require","router","Router","User","Game","post","req","res","traderGameToReceive","Object","assign","body","offeredGame","tradeeGameToReceive","requestedGame","findOne","username","session","user","lean","then","userRequests","requests","filter","request","id","findOneAndUpdate","owner","ownerRequests","Array","from","map","status","type","json","gameTradee","gameTrader","setTradeeRequestToAccepted","newRequests","deleteTraderRequest","find","$in","populate","path","model","trader","gameKey0","gameKey1","games","game","key","console","log","toString","name","gameConsole","summary","cover","screenshots","_id","Promise","all","save","module","exports"],"mappings":"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","file":"trades.js","sourcesContent":["const express = require('express');\r\nconst router = express.Router();\r\nconst User = require('../models/user');\r\nconst Game = require('../models/game');\r\n\r\nrouter.post('/declineTrade', (req, res) => {\r\n  const traderGameToReceive = Object.assign({}, req.body.offeredGame); // from tradee to trader\r\n  const tradeeGameToReceive = Object.assign({}, req.body.requestedGame); // from trader to tradee\r\n\r\n  User.findOne({username: req.session.user}).lean()\r\n    .then((user) => {\r\n      const userRequests = user.requests.filter((request) => {\r\n        if (request.requestedGame.id != req.body.requestedGame.id &&\r\n            request.offeredGame.id != req.body.offeredGame.id) {\r\n          return request;\r\n        }\r\n      });\r\n\r\n      User.findOneAndUpdate({username: req.session.user}, {requests: userRequests})\r\n        .then(() => {\r\n          User.findOne({username: req.body.requestedGame.owner}).lean()\r\n            .then((owner) => {\r\n              const ownerRequests = Array.from(owner.requests);\r\n              ownerRequests.map((request) => {\r\n                if (request.requestedGame.id === traderGameToReceive.id &&\r\n                  request.offeredGame.id === tradeeGameToReceive.id) {\r\n                  request.status = req.body.type;\r\n                }\r\n              });\r\n\r\n              User.findOneAndUpdate(\r\n                {username: req.body.requestedGame.owner},\r\n                {requests: ownerRequests})\r\n                .then(() => {\r\n                  res.json(userRequests);\r\n                });\r\n            });\r\n        });\r\n    });\r\n});\r\n\r\n// complete trade for trader after tradee accepts trade\r\nrouter.post('/completeTrade', function (req, res) {\r\n  const traderGameToReceive = Object.assign({}, req.body.offeredGame); // from tradee to trader\r\n  const tradeeGameToReceive = Object.assign({}, req.body.requestedGame); // from trader to tradee\r\n  //console.log('traderGameToReceive.owner', traderGameToReceive.owner);\r\n  //console.log('tradeeGameToReceive.owner', tradeeGameToReceive.owner);\r\n  //console.log('traderGameToReceive.owner.owner', traderGameToReceive.owner.id);\r\n  //console.log('tradeeGameToReceive.owner.owner', tradeeGameToReceive.owner.id);\r\n  const gameTradee = traderGameToReceive.owner.id;\r\n  const gameTrader = tradeeGameToReceive.owner.id;\r\n\r\n  const setTradeeRequestToAccepted = (requests) => {\r\n    const newRequests = Array.from(requests);\r\n\r\n    newRequests.map(request => {\r\n      if (request.requestedGame.id === traderGameToReceive.id &&\r\n          request.offeredGame.id === tradeeGameToReceive.id) {\r\n        request.status = 'Accepted';\r\n      }\r\n    });\r\n\r\n    return newRequests;\r\n  };\r\n\r\n  const deleteTraderRequest = (requests) => {\r\n    const newRequests = requests.filter(request => {\r\n      if (request.requestedGame.id != tradeeGameToReceive.id &&\r\n          request.offeredGame.id != traderGameToReceive.id) {\r\n        return request;\r\n      }\r\n    });\r\n\r\n    return newRequests;\r\n  };\r\n\r\n  // perform exchange on trader library\r\n  User.find({'_id': {$in :[gameTradee, gameTrader]}})\r\n    .populate({\r\n      path: 'games',\r\n      populate: {\r\n        path: 'owner',\r\n        model: 'users'\r\n      }\r\n    }).then((trader) => {\r\n      let gameKey0;\r\n      let gameKey1;\r\n\r\n      Array.from(trader[1].games).map((game, key) => {\r\n        console.log('game.id', game.id);\r\n        console.log('tradeeGameToReceive.id', tradeeGameToReceive.id);\r\n        if (game.id.toString() === tradeeGameToReceive.id.toString()) {\r\n          // trader[0].games[key] is still a user model so can't use spread operator\r\n          // to transfer properties\r\n          //trader[1].games[key] = Object.assign({},{traderGameToReceive});\r\n\r\n          trader[1].games[key].name = traderGameToReceive.name;\r\n          trader[1].games[key].gameConsole = traderGameToReceive.gameConsole;\r\n          trader[1].games[key].summary = traderGameToReceive.summary;\r\n          trader[1].games[key].id = traderGameToReceive.id;\r\n          trader[1].games[key].cover = traderGameToReceive.cover;\r\n          trader[1].games[key].screenshots = traderGameToReceive.screenshots;\r\n          gameKey0 = key;\r\n        }\r\n      });\r\n\r\n      Array.from(trader[0].games).map((game, key) => {\r\n        console.log('game.id', game.id);\r\n        console.log('traderGameToReceive.id', traderGameToReceive.id);\r\n        if (game.id.toString() === traderGameToReceive.id.toString()) {\r\n          //trader[0].games[key] = Object.assign({},{tradeeGameToReceive});\r\n\r\n          trader[0].games[key].name = tradeeGameToReceive.name;\r\n          trader[0].games[key].gameConsole = tradeeGameToReceive.gameConsole;\r\n          trader[0].games[key].summary = tradeeGameToReceive.summary;\r\n          trader[0].games[key].id = tradeeGameToReceive.id;\r\n          trader[0].games[key].cover = tradeeGameToReceive.cover;\r\n          trader[0].games[key].screenshots = tradeeGameToReceive.screenshots;\r\n          gameKey1 = key;\r\n        }\r\n      });\r\n\r\n      if (trader[0]._id.toString() === traderGameToReceive.owner.id.toString()) {\r\n      //  console.log('hit2');\r\n        trader[1].requests = setTradeeRequestToAccepted(trader[1].requests);\r\n        trader[0].requests = deleteTraderRequest(trader[0].requests);\r\n\r\n        console.log('gameKey1', gameKey1);\r\n        console.log('gameKey0', gameKey0);\r\n\r\n        Promise.all([\r\n          trader[1].games[gameKey1].save(),\r\n          trader[0].games[gameKey0].save(),\r\n          trader[1].save(),\r\n          trader[0].save()\r\n        ]).then(() => {\r\n          console.log('trader[0].requests*************************',trader[0].games);\r\n          res.json(trader[0].games);\r\n        });\r\n      } else {\r\n        trader[0].requests = setTradeeRequestToAccepted(trader[0].requests);\r\n        trader[1].requests = deleteTraderRequest(trader[1].requests);\r\n        console.log('gameKey1', gameKey1);\r\n        console.log('gameKey0', gameKey0);\r\n        //console.log('hit1');\r\n        Promise.all([\r\n          trader[1].games[gameKey1].save(),\r\n          trader[0].games[gameKey0].save(),\r\n          trader[1].save(),\r\n          trader[0].save()\r\n        ]).then(() => {\r\n          console.log('trader[1].requests***************************',trader[1].games);\r\n          res.json(trader[1].games);\r\n        });\r\n\r\n      }\r\n    });\r\n});\r\n\r\nmodule.exports = router;\r\n"]}