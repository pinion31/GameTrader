{"version":3,"sources":["../../server/routes/trades.js"],"names":["express","require","router","Router","User","Game","post","req","res","traderGameToReceive","Object","assign","body","offeredGame","tradeeGameToReceive","requestedGame","findOne","username","session","user","lean","then","userRequests","requests","filter","request","id","findOneAndUpdate","owner","ownerRequests","Array","from","map","status","type","json","gameKeys","tradee","trader","setTraderRequestToAccepted","newRequests","deleteTradeeRequest","copyProps","gameToGive","gameToReceive","traderString","games","game","key","toString","name","gameConsole","summary","cover","screenshots","find","_id","$in","populate","Promise","all","save","module","exports"],"mappings":"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","file":"trades.js","sourcesContent":["'use strict';\r\n\r\nconst express = require('express');\r\nconst router = express.Router();\r\nconst User = require('../models/user');\r\nconst Game = require('../models/game');\r\n\r\n/** Trader = user that created offer\r\n*   Tradee = user that receives offer and decides to accept trade or decline\r\n**/\r\n\r\n/**\r\n * Declines Trade that has been offered to user\r\n * Removes Request from current user requests\r\n * then finds the matching request in other end user and sets that request to status, declined.\r\n * @param {Obj} (from req.body) offeredGame\r\n * @param {Obj} (from req.body) requestedGame\r\n * Output: {Array} - Sends back User Requests minus declined Request\r\n */\r\nrouter.post('/declineTrade', (req, res) => {\r\n  const traderGameToReceive = Object.assign({}, req.body.offeredGame); // from tradee to trader\r\n  const tradeeGameToReceive = Object.assign({}, req.body.requestedGame); // from trader to tradee\r\n\r\n  User.findOne({username: req.session.user}).lean()\r\n    .then((user) => {\r\n      const userRequests = user.requests.filter((request) => {\r\n        if (request.requestedGame.id != req.body.requestedGame.id ||\r\n            request.offeredGame.id != req.body.offeredGame.id) {\r\n          return request;\r\n        }\r\n      });\r\n\r\n      User.findOneAndUpdate({username: req.session.user}, {requests: userRequests})\r\n        .then(() => {\r\n          User.findOne({username: req.body.requestedGame.owner.username}).lean()\r\n            .then((owner) => {\r\n              const ownerRequests = Array.from(owner.requests);\r\n              ownerRequests.map((request) => {\r\n                if (request.requestedGame.id === traderGameToReceive.id &&\r\n                  request.offeredGame.id === tradeeGameToReceive.id) {\r\n                  request.status = req.body.type;\r\n                }\r\n              });\r\n\r\n              User.findOneAndUpdate(\r\n                {username: req.body.requestedGame.owner.username},\r\n                {requests: ownerRequests})\r\n                .then(() => {\r\n                  res.json(userRequests);\r\n                });\r\n            });\r\n        });\r\n    });\r\n});\r\n\r\n/**\r\n * Completes Trade for Trader after Tradee Accepts\r\n * Trade is completed by swapping games as specified in trade and removed request from tradee requests\r\n * Request in trader lib is set to status, accepted\r\n */\r\n\r\nrouter.post('/completeTrade', (req, res) => {\r\n  const traderGameToReceive = Object.assign({}, req.body.offeredGame); // from tradee to trader\r\n  const tradeeGameToReceive = Object.assign({}, req.body.requestedGame); // from trader to tradee\r\n  const gameKeys = {tradee: -1, trader: -1};\r\n\r\n  const setTraderRequestToAccepted = (requests) => {\r\n    const newRequests = Array.from(requests);\r\n\r\n    // Locates request in trader collection by matching game ids and sets that request to accepted\r\n    newRequests.map((request) => {\r\n      if (request.requestedGame.id === traderGameToReceive.id &&\r\n          request.offeredGame.id === tradeeGameToReceive.id) {\r\n        request.status = 'Accepted';\r\n      }\r\n    });\r\n\r\n    return newRequests;\r\n  };\r\n\r\n  // Deletes Trade Request from Tradee Collection by filtering it out using game ids\r\n  const deleteTradeeRequest = (requests) => {\r\n    const newRequests = requests.filter((request) => {\r\n      if (request.requestedGame.id != tradeeGameToReceive.id &&\r\n          request.offeredGame.id != traderGameToReceive.id) {\r\n        return request;\r\n      }\r\n    });\r\n\r\n    return newRequests;\r\n  };\r\n\r\n  /** No game objs are deleted or added from trader or tradee collections during trade transaction\r\n  * Game info (such as name, summary, etc) are merely copied over and swapped out between game objs to simulate game trade\r\n  * Game _id is not changed; it always stays the same even though the game name can change after trade\r\n  */\r\n  const copyProps = (trader, gameToGive, gameToReceive, traderString) => {\r\n    Array.from(trader.games).map((game, key) => {\r\n      if (game.id.toString() === gameToGive.id.toString()) {\r\n        trader.games[key].name = gameToReceive.name;\r\n        trader.games[key].gameConsole = gameToReceive.gameConsole;\r\n        trader.games[key].summary = gameToReceive.summary;\r\n        trader.games[key].id = gameToReceive.id;\r\n        trader.games[key].cover = gameToReceive.cover;\r\n        trader.games[key].screenshots = gameToReceive.screenshots;\r\n        gameKeys[traderString] = key;\r\n      }\r\n    });\r\n  };\r\n\r\n  // Finds tradee and trader obj in user collection then swaps out games\r\n  User.find({_id: {$in: [tradeeGameToReceive.owner.id, traderGameToReceive.owner.id]}})\r\n    .populate('games').then((user) => {\r\n      let tradee;\r\n      let trader;\r\n\r\n      if (user[0].username === req.session.user) {\r\n        tradee = user[0];\r\n        trader = user[1];\r\n      } else {\r\n        tradee = user[1];\r\n        trader = user[0];\r\n      }\r\n\r\n      // games information swapped out here\r\n      copyProps(tradee, traderGameToReceive, tradeeGameToReceive, 'tradee');\r\n      copyProps(trader, tradeeGameToReceive, traderGameToReceive, 'trader');\r\n\r\n      trader.requests = setTraderRequestToAccepted(trader.requests); // update request status to accepted for trader\r\n      tradee.requests = deleteTradeeRequest(tradee.requests); // deleted accepted request from tradee collection\r\n\r\n      Promise.all([\r\n        trader.games[gameKeys.trader].save(),\r\n        tradee.games[gameKeys.tradee].save(),\r\n        trader.save(),\r\n        tradee.save()\r\n      ]).then(() => {\r\n        res.json(tradee.games);\r\n      });\r\n    });\r\n});\r\n\r\nmodule.exports = router;\r\n"]}