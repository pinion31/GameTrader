{"version":3,"sources":["../../server/routes/requests.js"],"names":["express","require","router","Router","User","post","req","res","findOne","username","session","user","lean","then","retrievedUser","Object","assign","userRequests","requests","Array","from","body","concat","findOneAndUpdate","incomingRequest","newRequest","status","requestedGame","offeredGame","path","owner","targetUser","targetUserRequests","json","filter","request","id","requestedGameId","offeredGameId","get","module","exports"],"mappings":"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","file":"requests.js","sourcesContent":["const express = require('express');\r\nconst router = express.Router();\r\nconst User = require('../models/user');\r\n\r\nrouter.post('/addRequest', (req, res) => {\r\n  User.findOne({username: req.session.user}).lean()\r\n    .then((user) => {\r\n      const retrievedUser = Object.assign({}, user);\r\n      const userRequests = retrievedUser.requests === null ? Array.from(req.body) :\r\n        Array.from(retrievedUser.requests).concat(req.body);\r\n\r\n      User.findOneAndUpdate({username: req.session.user}, {requests: userRequests})\r\n        .then(() => {\r\n          const incomingRequest = Object.assign({}, req.body[0]);\r\n          // create request for recipient of trade offer and append to their requests\r\n          const newRequest = {\r\n            status: 'Pending',\r\n            requestedGame: incomingRequest.offeredGame,\r\n            offeredGame: incomingRequest.requestedGame,\r\n            path: 'incoming',\r\n          };\r\n\r\n          // find target owner of requested game\r\n          User.findOne({username: incomingRequest.requestedGame.owner}).lean()\r\n            .then((user) => {\r\n              const targetUser = Object.assign({}, user);\r\n\r\n              // add request\r\n              const targetUserRequests = targetUser.requests === null ? Array.from([newRequest]) :\r\n                Array.from(targetUser.requests).concat([newRequest]);\r\n              // update target owner's request\r\n              User.findOneAndUpdate(\r\n                {username: incomingRequest.requestedGame.owner},\r\n                {requests: targetUserRequests})\r\n                .then(() => {\r\n                  res.json(req.body);\r\n                });\r\n            });\r\n        });\r\n    });\r\n});\r\n\r\nrouter.post('/removeRequest', (req, res) => {\r\n  User.findOne({username: req.session.user}).lean()\r\n    .then((user) => {\r\n      const userRequests = user.requests.filter((request) => {\r\n        if (request.requestedGame.id != req.body.requestedGameId &&\r\n            request.offeredGame.id != req.body.offeredGameId) {\r\n          return request;\r\n        }\r\n      });\r\n\r\n      User.findOneAndUpdate({username: req.session.user}, {requests: userRequests})\r\n        .then(() => {\r\n          res.json(userRequests);\r\n        });\r\n    });\r\n});\r\n\r\nrouter.get('/getUserRequests', (req, res) => {\r\n  if (req.session.user) {\r\n    User.findOne({username: req.session.user}).lean()\r\n      .then((user) => {\r\n        if (user.requests) {\r\n          res.json(user.requests);\r\n        } else {\r\n          res.json([]);\r\n        }\r\n      });\r\n  } else {\r\n    res.json({session: 'none'});\r\n  }\r\n});\r\n\r\nmodule.exports = router;\r\n"]}