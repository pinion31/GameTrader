{"version":3,"sources":["../../server/routes/requests.js"],"names":["express","require","router","Router","User","Request","post","req","res","userRequests","Array","from","body","newRequestOutgoing","status","requestedGame","_id","offeredGame","path","findOneAndUpdate","username","session","user","$push","requests","then","newRequestIncoming","findByIdAndUpdate","owner","toString","Promise","all","save","json","findOne","lean","filter","request","id","requestedGameId","offeredGameId","get","populate","module","exports"],"mappings":"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","file":"requests.js","sourcesContent":["const express = require('express');\r\nconst router = express.Router();\r\nconst User = require('../models/user');\r\nconst Request = require('../models/request');\r\n\r\nrouter.post('/addRequest', (req, res) => {\r\n  const userRequests = Array.from(req.body);\r\n\r\n  const newRequestOutgoing = new Request({\r\n    status: userRequests[0].status,\r\n    requestedGame: userRequests[0].requestedGame._id,\r\n    offeredGame: userRequests[0].offeredGame._id,\r\n    path: userRequests[0].path,\r\n  });\r\n\r\n\r\n  User.findOneAndUpdate({username: req.session.user}, {$push: {requests: newRequestOutgoing}})\r\n    .then(() => {\r\n      //const incomingRequest = Object.assign({}, req.body[0]);\r\n      // create request for recipient of trade offer and append to their requests\r\n      //console.log('findOne', user);\r\n\r\n      const newRequestIncoming = new Request({\r\n        status: userRequests[0].status,\r\n        requestedGame: userRequests[0].offeredGame._id,\r\n        offeredGame: userRequests[0].requestedGame._id,\r\n        path: 'incoming',\r\n      });\r\n\r\n      //console.log('sh', userRequests[0].requestedGame.owner);\r\n      User.findByIdAndUpdate(\r\n        {_id: userRequests[0].requestedGame.owner.toString()},\r\n        {$push: {requests: newRequestIncoming}})\r\n        .then(() => {\r\n          Promise.all([newRequestIncoming.save(), newRequestOutgoing.save()])\r\n            .then(() => {\r\n              res.json(req.body);\r\n            });\r\n        });\r\n    });\r\n});\r\n\r\nrouter.post('/removeRequest', (req, res) => {\r\n  User.findOne({username: req.session.user}).lean()\r\n    .then((user) => {\r\n      const userRequests = user.requests.filter((request) => {\r\n        if (request.requestedGame.id != req.body.requestedGameId &&\r\n            request.offeredGame.id != req.body.offeredGameId) {\r\n          return request;\r\n        }\r\n      });\r\n\r\n      User.findOneAndUpdate({username: req.session.user}, {requests: userRequests})\r\n        .then(() => {\r\n          res.json(userRequests);\r\n        });\r\n    });\r\n});\r\n\r\nrouter.get('/getUserRequests', (req, res) => {\r\n  if (req.session.user) {\r\n    User.findOne({username: req.session.user}).lean()\r\n      .populate('requests')\r\n      .then((user) => {\r\n        if (user.requests) {\r\n          res.json(user.requests);\r\n        } else {\r\n          res.json([]);\r\n        }\r\n      });\r\n  } else {\r\n    res.json({session: 'none'});\r\n  }\r\n});\r\n\r\nmodule.exports = router;\r\n"]}