{"version":3,"sources":["../server/server.js"],"names":["express","require","path","logger","cookieParser","bodyParser","mongoose","connect","Promise","global","session","MongoStore","db","connection","app","client","process","env","IGDB_KEY","use","json","urlencoded","extended","static","secret","saveUninitialized","resave","cookie","maxAge","httpOnly","store","mongooseConnection","ttl","post","req","res","username","body","pw","password","credCheck","findOne","then","user","field","validation","console","log","save","err","redirect","email","city","state","requests","games","get","searchResults","fields","search","params","game","filters","limit","offset","response","result","forEach","cover","coverImage","image","cloudinary_id","screenShots","screenshots","map","screenshot","screenShotURL","push","concat","id","name","summary","gameConsole","JSON","stringify","catch","error","allGames","find","lean","users","owner","modifiedUser","Object","assign","gametoAdd","Array","from","newGameColl","findOneAndUpdate","filter","traderGameToReceive","offeredGame","tradeeGameToReceive","requestedGame","userRequests","request","ownerRequests","status","type","gameTradee","gameTrader","trader","traderGames","traderRequests","tradee","tradeeGames","retrievedUser","incomingRequest","newRequest","targetUser","targetUserRequests","requestedGameId","offeredGameId","sendFile","resolve","__dirname","listen"],"mappings":"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","file":"server.js","sourcesContent":["const express = require('express');\nconst path = require('path');\nconst logger = require('morgan');\nconst cookieParser = require('cookie-parser');\nconst bodyParser = require('body-parser');\nconst mongoose = require('mongoose');\nmongoose.connect('mongodb://localhost/local');\nmongoose.Promise = global.Promise;\n\nconst session = require('express-session');\nconst MongoStore = require('connect-mongo')(session);\n\nconst db = mongoose.connection;\nimport igdb from 'igdb-api-node';\nimport User from './models/User';\n\nconst app = express();\n\n\nconst client = igdb(process.env.IGDB_KEY);\n// uncomment after placing your favicon in /public\n//app.use(favicon(path.join(__dirname, 'public', 'favicon.ico')));\napp.use(logger('dev'));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(cookieParser());\n//app.use(express.static(path.join(__dirname, '../static')));\napp.use(express.static('static'));\n\napp.use(session({\n  secret: 'noodles',\n  saveUninitialized: true,\n  resave: true,\n  cookie: {maxAge: 1000 * 60 * 60 * 24 * 2, httpOnly: false}, // 2 days\n  store: new MongoStore({mongooseConnection: db, ttl: 2 * 24 * 60 * 60})\n}));\n\n//**** USER ACTIONS ***///\napp.post('/loginUser', (req, res) => {\n\n  //validation\n  let username = req.body.username;\n  let pw = req.body.password;\n  let credCheck = false;\n\n  User.findOne({username: req.body.username})\n    .then((user) => {\n      if (user) {\n        if (user.password === req.body.password) {\n          credCheck = true;\n        } else {\n          res.json({\n            field: 'passwordHelp',\n            validation: \"Invalid Password\",\n        });\n        }\n      }\n      else {\n        res.json({\n          field: 'usernameHelp',\n          validation: \"Invalid Username\",\n        });\n      }\n\n    if (credCheck) {\n      //session check\n      if (typeof req.session.user === 'undefined') {\n        req.session.user = req.body.username;\n        console.log('resaving session');\n        req.session.save((err) => {\n\n          if(err){\n            console.log('error with session');\n          }\n          else {\n            res.json({\n              redirect: '/',\n              validation: 'valid',\n            });\n          }\n\n        });\n      }\n      else if (req.session.user !== req.body.username) {\n        req.session.user = req.body.username;\n        req.session.save((err) => {\n          if (err) {\n            console.log('error with session');\n          } else {\n            res.json({\n              redirect: '/',\n              validation: 'valid',\n            });\n          }\n        });\n      } else {\n        res.json({\n          redirect: '/',\n          validation: 'valid',\n        });\n      }\n    }\n\n    });\n\n\n});\n\napp.post('/addUser', (req, res) => {\n  const user = new User(\n    {\n      username: req.body.username,\n      password: req.body.password,\n      email: req.body.email,\n      city: req.body.city,\n      state: req.body.state,\n      requests: null,\n      games: null\n    }\n  );\n\n  user.save((err) => {\n    if (err) {throw err};\n  });\n});\n\n//** GAME ACTIONS ***//\n\napp.get('/findGame/:console/:game', (req,res) => {\n  let searchResults = [];\n\n  client.games({\n    fields: ['id', 'name', 'cover', 'summary', 'developers', 'screenshots'],\n    // fields: '*',\n    search: req.params.game,\n    filters: {\n      'release_dates.platform-eq': req.params.console,\n    },\n    limit: 15, // Limit to 5 results\n    offset: 0 // Index offset for results\n  }).then((response) => {\n    const result = response.body;\n\n    result.forEach((game) => {\n      if (game.cover) {\n        const coverImage = client.image({\n          cloudinary_id: game.cover.cloudinary_id},\n          'cover_small',\n          'jpg'\n        );\n\n        //convert and add screenshots\n        let screenShots = [];\n\n        if (game.screenshots) {\n          game.screenshots.map((screenshot) => {\n            const screenShotURL = client.image({\n              cloudinary_id: screenshot.cloudinary_id},\n              'screenshot_med',\n              'jpg'\n            );\n            screenShots.push(screenShotURL);\n          });\n        }\n\n        searchResults = searchResults.concat([\n          {\n            id: game.id,\n            name: game.name,\n            summary: game.summary,\n            cover: coverImage,\n            gameConsole: req.params.console,\n            screenshots:  screenShots,\n            // developer: result.developer,\n            // publisher: result.publishers,\n          }]);\n      }\n    });\n\n    res.json(JSON.stringify(searchResults));\n  }).catch((error) => {\n      throw error;\n    });\n});\n\napp.get('/getAllGames', (req, res) => {\n  let allGames = [];\n  User.find({}).lean()\n    .then((users) => {\n      users.forEach((user) => {\n        if (user.games) {\n          if (user.games[0].owner != req.session.user) {\n            allGames = allGames.concat(user.games);\n          }\n        }\n      });\n\n      res.json(allGames);\n    }).catch((err) => {\n      throw err;\n    });\n\n});\n\napp.get('/getUserGames', (req, res) => {\n  User.findOne({username: req.session.user}).lean()\n    .then((user) => {\n      if (user.games) {\n        res.json(user.games);\n      } else {\n        res.json([]);\n      }\n    });\n});\n\napp.post('/addGame', (req, res) => {\n  User.findOne({username: req.session.user}).lean()\n    .then((user) => {\n      const modifiedUser = Object.assign({}, user);\n\n      const gametoAdd = Array.from(req.body);\n      gametoAdd[0].owner = req.session.user; //append owner info to added game\n\n      const newGameColl = modifiedUser.games === null? gametoAdd:\n        Array.from(modifiedUser.games).concat(gametoAdd);\n\n      User.findOneAndUpdate({username: req.session.user}, {games: newGameColl})\n        .then(() => {\n          res.json(req.body);\n        });\n    });\n});\n\napp.post('/removeGame', (req, res) => {\n  User.findOne({username: req.session.user}).lean()\n    .then((user) => {\n      const modifiedUser = Object.assign({}, user);\n\n      const newGameColl = Array.from(modifiedUser.games).filter((game) => {\n        if (req.body.id != game.id) {\n          return game;\n        }\n      });\n\n      User.findOneAndUpdate({username: req.session.user}, {games: newGameColl})\n        .then(() => {\n          res.json(newGameColl);\n        });\n    });\n});\n\napp.post('/declineTrade', (req,res) => {\n  const traderGameToReceive = Object.assign({}, req.body.offeredGame); //from tradee to trader\n  const tradeeGameToReceive = Object.assign({}, req.body.requestedGame); //from trader to tradee\n\n  User.findOne({username: req.session.user}).lean()\n    .then((user) => {\n      let userRequests = user.requests.filter((request) => {\n        if (request.requestedGame.id != req.body.requestedGame.id &&\n            request.offeredGame.id != req.body.offeredGame.id) {\n          return request;\n        }\n      });\n\n      User.findOneAndUpdate({username: req.session.user}, {requests: userRequests})\n        .then(() => {\n          User.findOne({username: req.body.requestedGame.owner}).lean()\n            .then((owner) => {\n              let ownerRequests = Array.from(owner.requests);\n              ownerRequests.map((request) => {\n                if (request.requestedGame.id === traderGameToReceive.id &&\n                  request.offeredGame.id === tradeeGameToReceive.id) {\n                  request.status = req.body.type;\n                }\n              });\n\n              User.findOneAndUpdate({username: req.body.requestedGame.owner}, {requests: ownerRequests})\n                .then(() => {\n                  res.json(userRequests);\n                });\n            });\n        });\n    });\n\n});\n\n// complete trade for trader after tradee accepts trade\napp.post('/completeTrade', (req,res) => {\n  const traderGameToReceive = Object.assign({},req.body.offeredGame); //from tradee to trader\n  const tradeeGameToReceive = Object.assign({},req.body.requestedGame); //from trader to tradee\n  const gameTradee = req.session.user; req.body.requestedGame.owner;\n  const gameTrader = req.body.requestedGame.owner;\n\n  // perform exchange on trader library\n  User.findOne({username: gameTrader}).lean()\n    .then((trader) => {\n      let traderGames = Array.from(trader.games);\n      let traderRequests = Array.from(trader.requests);\n\n      // remove game from trader's library\n      traderGames = traderGames.filter((game) => {\n        if (game.id != tradeeGameToReceive.id) {\n          return game;\n        }\n      });\n\n      // change status for request to accept\n      traderRequests.map((request) => {\n        if (request.requestedGame.id === traderGameToReceive.id &&\n            request.offeredGame.id === tradeeGameToReceive.id) {\n          request.status = 'Accepted';\n        }\n      });\n\n      //change owner of game to new owner\n      traderGameToReceive.owner = gameTrader;\n\n      // add game to trader's library\n      traderGames = traderGames.concat([traderGameToReceive]);\n\n      User.findOneAndUpdate({username: gameTrader}, {games: traderGames, requests: traderRequests})\n        .then(() => {\n\n            // perform exchange on tradee library\n            User.findOne({username: gameTradee}).lean()\n              .then((tradee) => {\n                let tradeeGames = Array.from(tradee.games);\n\n                // remove game from tradee's library\n                tradeeGames = tradeeGames.filter((game) => {\n                  if (game.id != traderGameToReceive.id) {\n                    return game;\n                  }\n                });\n\n                //change owner of game to new owner\n                tradeeGameToReceive.owner = gameTradee;\n\n                // add game to tradee's library\n                tradeeGames = tradeeGames.concat([tradeeGameToReceive]);\n\n                User.findOneAndUpdate({username: gameTradee}, {games: tradeeGames})\n                  .then(() => {\n                    res.json(tradeeGames);\n                  });\n                });\n        });\n    });\n\n});\n\n//**** REQUEST ACTIONS *****/////\n\napp.post('/addRequest', (req, res) => {\n  User.findOne({username: req.session.user}).lean()\n    .then((user) => {\n      const retrievedUser = Object.assign({}, user);\n      const userRequests = retrievedUser.requests === null?Array.from(req.body):\n        Array.from(retrievedUser.requests).concat(req.body);\n\n      User.findOneAndUpdate({username: req.session.user}, {requests: userRequests})\n        .then(() => {\n\n          const incomingRequest = Object.assign({},req.body[0]);\n          //create request for recipient of trade offer and append to their requests\n          const newRequest = {\n            status: 'Pending',\n            requestedGame: incomingRequest.offeredGame,\n            offeredGame: incomingRequest.requestedGame,\n            path: 'incoming',\n          };\n\n          // find target owner of requested game\n          User.findOne({username: incomingRequest.requestedGame.owner}).lean()\n            .then(user => {\n              const targetUser = Object.assign({}, user);\n\n              // add request\n              const targetUserRequests = targetUser.requests === null?Array.from([newRequest]):\n                Array.from(targetUser.requests).concat([newRequest]);\n              // update target owner's request\n              User.findOneAndUpdate({username: incomingRequest.requestedGame.owner}, {requests: targetUserRequests})\n                .then(() => {\n                  res.json(req.body);\n                })\n            });\n        });\n    });\n});\n\napp.post('/removeRequest', (req, res) => {\n  User.findOne({username: req.session.user}).lean()\n    .then((user) => {\n      let userRequests = user.requests.filter((request) => {\n        if (request.requestedGame.id != req.body.requestedGameId &&\n            request.offeredGame.id != req.body.offeredGameId) {\n          return request;\n        }\n      });\n\n      User.findOneAndUpdate({username: req.session.user}, {requests: userRequests})\n        .then(() => {\n          res.json(userRequests);\n        });\n    });\n});\n\napp.get('/getUserRequests', (req, res) => {\n  User.findOne({username: req.session.user}).lean()\n    .then((user) => {\n      if (user.requests) {\n        res.json(user.requests);\n      } else {\n        res.json([]);\n      }\n    });\n});\n\napp.get('*', (req, res) => {\n  res.sendFile(path.resolve(__dirname, '../static', 'index.html'));\n});\n\napp.listen(3000, () => {\n  console.log('App started again');\n});\n\n\n /*\n  client.platforms({\n    fields: '*' , // Return all fields\n   // search: req.params.game,\n    limit: 50, // Limit to 5 results\n    offset: 100 // Index offset for results\n    }).then((response) => {\n        console.dir(response);\n\n\n\n     });*/"]}