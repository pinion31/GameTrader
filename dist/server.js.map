{"version":3,"sources":["../server/server.js"],"names":["express","require","path","logger","cookieParser","bodyParser","mongoose","connect","Promise","global","app","client","process","env","IGDB_KEY","use","json","urlencoded","extended","static","post","req","res","user","username","body","password","email","city","state","requests","games","save","err","get","searchResults","fields","search","params","game","filters","console","limit","offset","then","response","result","forEach","cover","coverImage","image","cloudinary_id","concat","id","name","summary","gameConsole","JSON","stringify","catch","error","allGames","find","lean","users","findOne","modifiedUser","Object","assign","newGameColl","Array","from","findOneAndUpdate","filter","retrievedUser","userRequests","dir","request","requestedGame","requestedGameId","offeredGame","offeredGameId","sendFile","resolve","__dirname","listen","log"],"mappings":"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","file":"server.js","sourcesContent":["const express = require('express');\nconst path = require('path');\nconst logger = require('morgan');\nconst cookieParser = require('cookie-parser');\nconst bodyParser = require('body-parser');\nconst mongoose = require('mongoose');\nmongoose.connect('mongodb://localhost/local');\nmongoose.Promise = global.Promise;\nimport igdb from 'igdb-api-node';\nimport User from './models/User';\n\n\n/*\nvar test = new User({\n  'test': {\n     username: 'chriscantu',\n      password: 'moondog1',\n      email: 'pinion31@gmail.com',\n      city: 'Manor',\n      state: 'TX',\n      requests: {},\n      games: {\n        1234:\n          {\n            name: 'Fallout 4',\n            id: 1234,\n            cover: '',\n            owner: 'chriscantu',\n            gameconsole: 'xbox',\n            summary: '',\n          },\n      }\n  }\n\n});\n\ntest.save(err) => {\n  if (err) {throw err}\n  else {\n    console.log('test saved');\n  }\n});*/\n\nconst app = express();\n\n\nconst client = igdb(process.env.IGDB_KEY);\n// uncomment after placing your favicon in /public\n//app.use(favicon(path.join(__dirname, 'public', 'favicon.ico')));\napp.use(logger('dev'));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(cookieParser());\n//app.use(express.static(path.join(__dirname, '../static')));\napp.use(express.static('static'));\n\n//**** USER ACTIONS ***///\napp.post('/addUser', (req,res) => {\n  const user = new User(\n    {\n      username: req.body.username,\n      password: req.body.password,\n      email: req.body.email,\n      city: req.body.city,\n      state: req.body.state,\n      requests: null,\n      games: null\n    }\n  );\n\n  user.save((err) => {\n    if (err) {throw err};\n  });\n});\n\n//** GAME ACTIONS ***//\n\napp.get('/findGame/:console/:game', (req,res) => {\n  let searchResults = [];\n\n  client.games({\n    fields: ['id', 'name', 'cover', 'summary', 'developers', 'publishers'] , // Return all fields\n    search: req.params.game,\n    filters: {\n      'release_dates.platform-eq': req.params.console,\n    },\n    limit: 15, // Limit to 5 results\n    offset: 0 // Index offset for results\n  }).then((response) => {\n    const result = response.body;\n\n    result.forEach((game) => {\n      if (game.cover) {\n        let coverImage = client.image({\n          cloudinary_id: game.cover.cloudinary_id},\n          'cover_small',\n          'jpg'\n        );\n\n        searchResults = searchResults.concat([\n          {\n            id: game.id,\n            name: game.name,\n            summary: game.summary,\n            cover: coverImage,\n            gameConsole: req.params.console,\n            // developer: result.developer,\n            // publisher: result.publishers,\n          }]);\n      }\n    });\n\n    res.json(JSON.stringify(searchResults));\n  }).catch((error) => {\n    throw error;\n});\n});\n\napp.get('/getAllGames', (req,res) => {\n  let allGames = [];\n\n  User.find({}).lean()\n    .then((users) => {\n      users.forEach((user) => {\n        if (user.games) {\n          allGames = allGames.concat(user.games);\n        }\n      });\n\n      res.json(allGames);\n\n    }).catch((err) => {\n      throw err;\n    });\n\n});\n\napp.get('/getUserGames/:user', (req,res) => {\n  User.findOne({username:req.params.user}).lean()\n    .then(user => {\n      res.json(user.games);\n    });\n});\n\napp.post('/addGame/:user', (req, res) => {\n  User.findOne({username: req.params.user}).lean()\n    .then((user) => {\n      const modifiedUser = Object.assign({}, user);\n      const newGameColl = modifiedUser.games === null?Array.from(req.body):\n        Array.from(modifiedUser.games).concat(req.body);\n\n      User.findOneAndUpdate({username: req.params.user}, {games: newGameColl})\n        .then(() => {\n          res.json(req.body);\n        });\n    });\n});\n\napp.post('/removeGame/:user', (req, res) => {\n  User.findOne({username: req.params.user}).lean()\n    .then((user) => {\n      const modifiedUser = Object.assign({}, user);\n\n      const newGameColl = Array.from(modifiedUser.games).filter((game) => {\n        if (req.body.id != game.id) {\n          return game;\n        }\n      });\n\n      User.findOneAndUpdate({username: req.params.user}, {games: newGameColl})\n        .then(() => {\n          res.json(newGameColl);\n        });\n    });\n});\n\n//**** REQUEST ACTIONS *****/////\n\napp.post('/addRequest/:user', (req, res) => {\n  User.findOne({username: req.params.user}).lean()\n    .then((user) => {\n      const retrievedUser = Object.assign({}, user);\n      const userRequests = retrievedUser.requests === null?Array.from(req.body):\n        Array.from(retrievedUser.requests).concat(req.body);\n\n      User.findOneAndUpdate({username: req.params.user}, {requests: userRequests})\n        .then(() => {\n          res.json(req.body);\n        });\n    });\n});\n\napp.post('/removeRequest/:user', (req, res) => {\n  User.findOne({username: req.params.user}).lean()\n    .then((user) => {\n      const retrievedUser = Object.assign({}, user);\n      console.dir(req.body);\n      let userRequests = user.requests.filter((request) => {\n          console.dir(request);\n        if (request.requestedGame.id != req.body.requestedGameId &&\n            request.offeredGame.id != req.body.offeredGameId) {\n          return request;\n        }\n      });\n\n      User.findOneAndUpdate({username: req.params.user}, {requests: userRequests})\n        .then(() => {\n          res.json(userRequests);\n        });\n    });\n});\n\napp.get('/getUserRequests/:user', (req,res) => {\n  User.findOne({username: req.params.user}).lean()\n    .then(user => {\n      res.json(user.requests);\n    });\n});\n\napp.get('*', (req, res) => {\n  res.sendFile(path.resolve(__dirname, '../static', 'index.html'));\n});\n\napp.listen(3000, () => {\n  console.log('App started again');\n});\n\n\n /*\n  client.platforms({\n    fields: '*' , // Return all fields\n   // search: req.params.game,\n    limit: 50, // Limit to 5 results\n    offset: 100 // Index offset for results\n    }).then((response) => {\n        console.dir(response);\n\n\n\n     });*/"]}