{"version":3,"sources":["../server/server.js"],"names":["express","require","path","logger","cookieParser","bodyParser","mongoose","connect","Promise","global","session","MongoStore","db","connection","app","client","process","env","IGDB_KEY","use","json","urlencoded","extended","static","secret","saveUninitialized","resave","cookie","maxAge","httpOnly","store","mongooseConnection","ttl","post","req","res","user","body","username","console","log","save","err","redirect","password","email","city","state","requests","games","get","searchResults","fields","search","params","game","filters","limit","offset","then","response","result","forEach","cover","coverImage","image","cloudinary_id","concat","id","name","summary","gameConsole","JSON","stringify","catch","error","allGames","find","lean","users","owner","findOne","modifiedUser","Object","assign","gametoAdd","Array","from","newGameColl","findOneAndUpdate","filter","traderGameToReceive","offeredGame","tradeeGameToReceive","requestedGame","gameTradee","gameTrader","trader","traderGames","traderRequests","map","request","status","tradee","tradeeGames","retrievedUser","userRequests","incomingRequest","newRequest","targetUser","targetUserRequests","requestedGameId","offeredGameId","sendFile","resolve","__dirname","listen"],"mappings":"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","file":"server.js","sourcesContent":["const express = require('express');\nconst path = require('path');\nconst logger = require('morgan');\nconst cookieParser = require('cookie-parser');\nconst bodyParser = require('body-parser');\nconst mongoose = require('mongoose');\nmongoose.connect('mongodb://localhost/local');\nmongoose.Promise = global.Promise;\n\nconst session = require('express-session');\nconst MongoStore = require('connect-mongo')(session);\n\nconst db = mongoose.connection;\nimport igdb from 'igdb-api-node';\nimport User from './models/User';\n\nconst app = express();\n\n\nconst client = igdb(process.env.IGDB_KEY);\n// uncomment after placing your favicon in /public\n//app.use(favicon(path.join(__dirname, 'public', 'favicon.ico')));\napp.use(logger('dev'));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(cookieParser());\n//app.use(express.static(path.join(__dirname, '../static')));\napp.use(express.static('static'));\n\napp.use(session({\n  secret: 'noodles',\n  saveUninitialized: true,\n  resave: true,\n  cookie: {maxAge: 1000 * 60 * 60 * 24 * 2, httpOnly: false}, // 2 days\n  store: new MongoStore({mongooseConnection: db, ttl: 2 * 24 * 60 * 60})\n}));\n\n//**** USER ACTIONS ***///\napp.post('/loginUser', (req, res) => {\n  if (typeof req.session.user === 'undefined') {\n    req.session.user = req.body.username;\n    console.log('resaving session');\n    req.session.save((err) => {\n\n      if(err){\n        console.log('error with session');\n      }\n      else {\n        res.json({redirect: '/'});\n      }\n\n    });\n  }\n  else if (req.session.user != req.body.username) {\n      req.session.user = req.body.username;\n      req.session.save((err) => {\n          if(err){\n            console.log('error with session');\n          }\n          else {\n            res.json({redirect: '/'});\n          }\n        });\n  } else {\n    res.json({redirect: '/'});\n  }\n\n\n\n  //console.dir(req.session);\n\n  //console.log('redirecting...');\n  //res.json({redirect: '/'});\n  //res.redirect('/');\n\n\n  /*req.session.user = req.body.username;\n  req.session.save((err) => {\n    if(err){\n      console.log('error with session');\n    }\n  });*/\n  //res.json(req.session);\n});\n\napp.post('/addUser', (req, res) => {\n  const user = new User(\n    {\n      username: req.body.username,\n      password: req.body.password,\n      email: req.body.email,\n      city: req.body.city,\n      state: req.body.state,\n      requests: null,\n      games: null\n    }\n  );\n\n  user.save((err) => {\n    if (err) {throw err};\n  });\n});\n\n//** GAME ACTIONS ***//\n\napp.get('/findGame/:console/:game', (req,res) => {\n  let searchResults = [];\n\n  client.games({\n    fields: ['id', 'name', 'cover', 'summary', 'developers', 'publishers'] , // Return all fields\n    search: req.params.game,\n    filters: {\n      'release_dates.platform-eq': req.params.console,\n    },\n    limit: 15, // Limit to 5 results\n    offset: 0 // Index offset for results\n  }).then((response) => {\n    const result = response.body;\n\n    result.forEach((game) => {\n      if (game.cover) {\n        let coverImage = client.image({\n          cloudinary_id: game.cover.cloudinary_id},\n          'cover_small',\n          'jpg'\n        );\n\n        searchResults = searchResults.concat([\n          {\n            id: game.id,\n            name: game.name,\n            summary: game.summary,\n            cover: coverImage,\n            gameConsole: req.params.console,\n            // developer: result.developer,\n            // publisher: result.publishers,\n          }]);\n      }\n    });\n\n    res.json(JSON.stringify(searchResults));\n  }).catch((error) => {\n    throw error;\n});\n});\n\napp.get('/getAllGames', (req, res) => {\n  let allGames = [];\n  User.find({}).lean()\n    .then((users) => {\n      users.forEach((user) => {\n        if (user.games) {\n          if (user.games[0].owner != req.session.user) {\n            allGames = allGames.concat(user.games);\n          }\n        }\n      });\n\n      res.json(allGames);\n    }).catch((err) => {\n      throw err;\n    });\n\n});\n\napp.get('/getUserGames', (req, res) => {\n  User.findOne({username: req.session.user}).lean()\n    .then((user) => {\n      if (user.games) {\n        res.json(user.games);\n      } else {\n        res.json([]);\n      }\n    });\n});\n\napp.post('/addGame', (req, res) => {\n  User.findOne({username: req.session.user}).lean()\n    .then((user) => {\n      const modifiedUser = Object.assign({}, user);\n\n      const gametoAdd = Array.from(req.body);\n      gametoAdd[0].owner = req.session.user; //append owner info to added game\n\n      const newGameColl = modifiedUser.games === null? gametoAdd:\n        Array.from(modifiedUser.games).concat(gametoAdd);\n\n      User.findOneAndUpdate({username: req.session.user}, {games: newGameColl})\n        .then(() => {\n          res.json(req.body);\n        });\n    });\n});\n\napp.post('/removeGame', (req, res) => {\n  User.findOne({username: req.session.user}).lean()\n    .then((user) => {\n      const modifiedUser = Object.assign({}, user);\n\n      const newGameColl = Array.from(modifiedUser.games).filter((game) => {\n        if (req.body.id != game.id) {\n          return game;\n        }\n      });\n\n      User.findOneAndUpdate({username: req.session.user}, {games: newGameColl})\n        .then(() => {\n          res.json(newGameColl);\n        });\n    });\n});\n\n// complete trade for trader after tradee accepts trade\napp.post('/completeTrade', (req,res) => {\n  const traderGameToReceive = Object.assign({},req.body.offeredGame); //from tradee to trader\n  const tradeeGameToReceive = Object.assign({},req.body.requestedGame); //from trader to tradee\n  const gameTradee = req.session.user; req.body.requestedGame.owner;\n  const gameTrader = req.body.requestedGame.owner;\n\n  // perform exchange on trader library\n  User.findOne({username: gameTrader}).lean()\n    .then((trader) => {\n      let traderGames = Array.from(trader.games);\n      let traderRequests = Array.from(trader.requests);\n\n      // remove game from trader's library\n      traderGames = traderGames.filter((game) => {\n        if (game.id != tradeeGameToReceive.id) {\n          return game;\n        }\n      });\n\n      // change status for request to accept\n      traderRequests.map((request) => {\n        if (request.requestedGame.id === traderGameToReceive.id &&\n            request.offeredGame.id === tradeeGameToReceive.id) {\n          request.status = 'Accepted';\n        }\n      });\n\n      //change owner of game to new owner\n      traderGameToReceive.owner = gameTrader;\n\n      // add game to trader's library\n      traderGames = traderGames.concat([traderGameToReceive]);\n\n      User.findOneAndUpdate({username: gameTrader}, {games: traderGames, requests: traderRequests})\n        .then(() => {\n\n            // perform exchange on tradee library\n            User.findOne({username: gameTradee}).lean()\n              .then((tradee) => {\n                let tradeeGames = Array.from(tradee.games);\n\n                // remove game from tradee's library\n                tradeeGames = tradeeGames.filter((game) => {\n                  if (game.id != traderGameToReceive.id) {\n                    return game;\n                  }\n                });\n\n                //change owner of game to new owner\n                tradeeGameToReceive.owner = gameTradee;\n\n                // add game to tradee's library\n                tradeeGames = tradeeGames.concat([tradeeGameToReceive]);\n\n                User.findOneAndUpdate({username: gameTradee}, {games: tradeeGames})\n                  .then(() => {\n                    res.json(tradeeGames);\n                  });\n                });\n        });\n    });\n\n});\n\n//**** REQUEST ACTIONS *****/////\n\napp.post('/addRequest', (req, res) => {\n  User.findOne({username: req.session.user}).lean()\n    .then((user) => {\n      const retrievedUser = Object.assign({}, user);\n      const userRequests = retrievedUser.requests === null?Array.from(req.body):\n        Array.from(retrievedUser.requests).concat(req.body);\n\n      User.findOneAndUpdate({username: req.session.user}, {requests: userRequests})\n        .then(() => {\n\n          const incomingRequest = Object.assign({},req.body[0]);\n          //create request for recipient of trade offer and append to their requests\n          const newRequest = {\n            status: 'Pending',\n            requestedGame: incomingRequest.offeredGame,\n            offeredGame: incomingRequest.requestedGame,\n            path: 'incoming',\n          };\n\n          // find target owner of requested game\n          User.findOne({username: incomingRequest.requestedGame.owner}).lean()\n            .then(user => {\n              const targetUser = Object.assign({}, user);\n\n              // add request\n              const targetUserRequests = targetUser.requests === null?Array.from([newRequest]):\n                Array.from(targetUser.requests).concat([newRequest]);\n              // update target owner's request\n              User.findOneAndUpdate({username: incomingRequest.requestedGame.owner}, {requests: targetUserRequests})\n                .then(() => {\n                  res.json(req.body);\n                })\n            });\n        });\n    });\n});\n\napp.post('/removeRequest', (req, res) => {\n  User.findOne({username: req.session.user}).lean()\n    .then((user) => {\n      const retrievedUser = Object.assign({}, user);\n      let userRequests = user.requests.filter((request) => {\n        if (request.requestedGame.id != req.body.requestedGameId &&\n            request.offeredGame.id != req.body.offeredGameId) {\n          return request;\n        }\n      });\n\n      User.findOneAndUpdate({username: req.session.user}, {requests: userRequests})\n        .then(() => {\n          res.json(userRequests);\n        });\n    });\n});\n\napp.get('/getUserRequests', (req, res) => {\n  User.findOne({username: req.session.user}).lean()\n    .then((user) => {\n      if (user.requests) {\n        res.json(user.requests);\n      } else {\n        res.json([]);\n      }\n    });\n});\n\napp.get('*', (req, res) => {\n  res.sendFile(path.resolve(__dirname, '../static', 'index.html'));\n});\n\napp.listen(3000, () => {\n  console.log('App started again');\n});\n\n\n /*\n  client.platforms({\n    fields: '*' , // Return all fields\n   // search: req.params.game,\n    limit: 50, // Limit to 5 results\n    offset: 100 // Index offset for results\n    }).then((response) => {\n        console.dir(response);\n\n\n\n     });*/"]}