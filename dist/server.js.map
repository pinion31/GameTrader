{"version":3,"sources":["../server/server.js"],"names":["express","require","path","logger","cookieParser","bodyParser","mongoose","users","trades","games","requests","connect","Promise","global","session","MongoStore","db","connection","app","use","json","urlencoded","extended","static","secret","saveUninitialized","resave","cookie","maxAge","httpOnly","store","mongooseConnection","ttl","ensureAuthenicated","req","res","next","undefined","redirect","get","sendFile","resolve","__dirname","listen","console","log"],"mappings":";;AAAA;;;;;;AAEA,IAAMA,UAAUC,QAAQ,SAAR,CAAhB;AACA,IAAMC,OAAOD,QAAQ,MAAR,CAAb;AACA,IAAME,SAASF,QAAQ,QAAR,CAAf;AACA,IAAMG,eAAeH,QAAQ,eAAR,CAArB;AACA,IAAMI,aAAaJ,QAAQ,aAAR,CAAnB;AACA,IAAMK,WAAWL,QAAQ,UAAR,CAAjB;AACA,IAAMM,QAASN,QAAQ,gBAAR,CAAf;AACA,IAAMO,SAASP,QAAQ,iBAAR,CAAf;AACA,IAAMQ,QAAQR,QAAQ,gBAAR,CAAd;AACA,IAAMS,WAAWT,QAAQ,mBAAR,CAAjB;;AAGAK,SAASK,OAAT,CAAiB,2BAAjB;AACAL,SAASM,OAAT,GAAmBC,OAAOD,OAA1B;;AAEA,IAAME,UAAUb,QAAQ,iBAAR,CAAhB;AACA,IAAMc,aAAad,QAAQ,eAAR,EAAyBa,OAAzB,CAAnB;;AAEA,IAAME,KAAKV,SAASW,UAApB;;AAEA,IAAMC,MAAMlB,SAAZ;;AAEAkB,IAAIC,GAAJ,CAAQhB,OAAO,KAAP,CAAR;AACAe,IAAIC,GAAJ,CAAQd,WAAWe,IAAX,EAAR;AACAF,IAAIC,GAAJ,CAAQd,WAAWgB,UAAX,CAAsB,EAACC,UAAU,KAAX,EAAtB,CAAR;AACAJ,IAAIC,GAAJ,CAAQf,cAAR;AACAc,IAAIC,GAAJ,CAAQnB,QAAQuB,MAAR,CAAe,QAAf,CAAR;;AAEAL,IAAIC,GAAJ,CAAQL,QAAQ;AACdU,UAAQ,SADM;AAEdC,qBAAmB,IAFL;AAGdC,UAAQ,IAHM;AAIdC,UAAQ,EAACC,QAAQ,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAAjB,GAAsB,CAA/B,EAAkCC,UAAU,KAA5C,EAJM,EAI8C;AAC5DC,SAAO,IAAIf,UAAJ,CAAe,EAACgB,oBAAoBf,EAArB,EAAyBgB,KAAK,IAAI,EAAJ,GAAS,EAAT,GAAc,EAA5C,EAAf;AALO,CAAR,CAAR;;AAQA,SAASC,kBAAT,CAA4BC,GAA5B,EAAiCC,GAAjC,EAAsCC,IAAtC,EAA4C;AAC1C,MAAID,IAAIrB,OAAJ,IAAeuB,SAAnB,EAA8B;AAC5B,WAAOD,MAAP;AACD;;AAEDD,MAAIG,QAAJ,CAAa,GAAb;AACD;;AAGDpB,IAAIC,GAAJ,CAAQ,QAAR,EAAkBZ,KAAlB;AACA;AACAW,IAAIC,GAAJ,CAAQ,QAAR,EAAkBV,KAAlB;AACAS,IAAIC,GAAJ,CAAQ,SAAR,EAAmBX,MAAnB;AACAU,IAAIC,GAAJ,CAAQ,WAAR,EAAqBT,QAArB;;AAEAQ,IAAIqB,GAAJ,CAAQ,GAAR,EAAa,UAACL,GAAD,EAAMC,GAAN,EAAc;AACzB,MAAIA,IAAIrB,OAAJ,KAAgBuB,SAApB,EAA+B;AAC7BF,QAAIG,QAAJ,CAAa,GAAb;AACD;;AAEDH,MAAIK,QAAJ,CAAatC,KAAKuC,OAAL,CAAaC,SAAb,EAAwB,WAAxB,EAAqC,YAArC,CAAb;AACD,CAND;;AAQAxB,IAAIyB,MAAJ,CAAW,IAAX,EAAiB,YAAM;AACrBC,UAAQC,GAAR,CAAY,mBAAZ;AACD,CAFD","file":"server.js","sourcesContent":["import igdb from 'igdb-api-node';\n\nconst express = require('express');\nconst path = require('path');\nconst logger = require('morgan');\nconst cookieParser = require('cookie-parser');\nconst bodyParser = require('body-parser');\nconst mongoose = require('mongoose');\nconst users =  require('./routes/users');\nconst trades = require('./routes/trades');\nconst games = require('./routes/games');\nconst requests = require('./routes/requests');\n\n\nmongoose.connect('mongodb://localhost/local');\nmongoose.Promise = global.Promise;\n\nconst session = require('express-session');\nconst MongoStore = require('connect-mongo')(session);\n\nconst db = mongoose.connection;\n\nconst app = express();\n\napp.use(logger('dev'));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({extended: false}));\napp.use(cookieParser());\napp.use(express.static('static'));\n\napp.use(session({\n  secret: 'noodles',\n  saveUninitialized: true,\n  resave: true,\n  cookie: {maxAge: 1000 * 60 * 60 * 24 * 2, httpOnly: false}, // 2 days\n  store: new MongoStore({mongooseConnection: db, ttl: 2 * 24 * 60 * 60})\n}));\n\nfunction ensureAuthenicated(req, res, next) {\n  if (res.session != undefined) {\n    return next();\n  }\n\n  res.redirect('/');\n}\n\n\napp.use('/users', users);\n//app.use('/', ensureAuthenicated);\napp.use('/games', games);\napp.use('/trades', trades);\napp.use('/requests', requests);\n\napp.get('*', (req, res) => {\n  if (res.session === undefined) {\n    res.redirect('/');\n  }\n\n  res.sendFile(path.resolve(__dirname, '../static', 'index.html'));\n});\n\napp.listen(3000, () => {\n  console.log('App started again');\n});\n"]}