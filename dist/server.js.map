{"version":3,"sources":["../server/server.js"],"names":["express","require","path","logger","cookieParser","bodyParser","mongoose","bcrypt","connect","Promise","global","session","MongoStore","db","connection","app","client","process","env","IGDB_KEY","use","json","urlencoded","extended","static","secret","saveUninitialized","resave","cookie","maxAge","httpOnly","store","mongooseConnection","ttl","post","req","res","usernameStripped","body","username","split","findOne","then","user","compare","password","err","match","save","redirect","validation","field","result","genSalt","salt","hash","password1","console","log","email","city","state","requests","games","get","searchResults","fields","search","params","game","filters","limit","offset","response","forEach","cover","coverImage","image","cloudinary_id","screenShots","screenshots","map","screenshot","screenShotURL","push","concat","id","name","summary","gameConsole","JSON","stringify","catch","error","allGames","find","lean","users","owner","modifiedUser","Object","assign","gametoAdd","Array","from","newGameColl","findOneAndUpdate","filter","traderGameToReceive","offeredGame","tradeeGameToReceive","requestedGame","userRequests","request","ownerRequests","status","type","gameTradee","gameTrader","trader","traderGames","traderRequests","tradee","tradeeGames","retrievedUser","incomingRequest","newRequest","targetUser","targetUserRequests","requestedGameId","offeredGameId","sendFile","resolve","__dirname","listen"],"mappings":"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","file":"server.js","sourcesContent":["import igdb from 'igdb-api-node';\nimport User from './models/User';\n\nconst express = require('express');\nconst path = require('path');\nconst logger = require('morgan');\nconst cookieParser = require('cookie-parser');\nconst bodyParser = require('body-parser');\nconst mongoose = require('mongoose');\nconst bcrypt = require('bcryptjs');\n\nmongoose.connect('mongodb://localhost/local');\nmongoose.Promise = global.Promise;\n\nconst session = require('express-session');\nconst MongoStore = require('connect-mongo')(session);\n\nconst db = mongoose.connection;\n\n\nconst app = express();\nconst client = igdb(process.env.IGDB_KEY);\n\napp.use(logger('dev'));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({extended: false}));\napp.use(cookieParser());\napp.use(express.static('static'));\n\napp.use(session({\n  secret: 'noodles',\n  saveUninitialized: true,\n  resave: true,\n  cookie: {maxAge: 1000 * 60 * 60 * 24 * 2, httpOnly: false}, // 2 days\n  store: new MongoStore({mongooseConnection: db, ttl: 2 * 24 * 60 * 60})\n}));\n\n// **** USER ACTIONS ***///\napp.post('/loginUser', (req, res) => {\n  // strips out trailing spaces after username\n  const usernameStripped = req.body.username.split(' ')[0];\n\n  User.findOne({username: usernameStripped})\n    .then((user) => {\n      if (user) {\n        // decrypt password\n        bcrypt.compare(req.body.password, user.password, (err, match) => {\n          if (match) {\n            // session check\n            if (typeof req.session.user === 'undefined') {\n              req.session.user = usernameStripped;\n              req.session.save((err) => {\n                if (err) {\n                  throw err;\n                } else {\n                  res.json({\n                    redirect: '/Dashboard',\n                    validation: 'valid',\n                  });\n                }\n              });\n            } else if (req.session.user != usernameStripped) {\n              req.session.user = usernameStripped;\n              req.session.save((err) => {\n                if (err) {\n                  throw err;\n                } else {\n                  res.json({\n                    redirect: '/Dashboard',\n                    validation: 'valid',\n                  });\n                }\n              });\n            } else {\n              res.json({\n                redirect: '/Dashboard',\n                validation: 'valid',\n              });\n            }\n          } else {\n            res.json({\n              field: 'passwordHelp',\n              validation: 'Invalid Password',\n            });\n          }\n        });\n      } else {\n        res.json({\n          field: 'usernameHelp',\n          validation: 'Invalid Username',\n        });\n      }\n    });\n});\n\napp.post('/addUser', (req, res) => {\n  // strips out trailing spaces after username\n  const usernameStripped = req.body.username.split(' ')[0];\n\n  User.findOne({username: usernameStripped})\n    .then((result) => {\n      if (!result) {\n        req.session.user = usernameStripped;\n        req.session.save((err) => {\n          if (err) { throw err; }\n        });\n\n        bcrypt.genSalt(10, (err, salt) => {\n          bcrypt.hash(req.body.password1, salt, (err, hash) => {\n            // Store hash in your password DB.\n            console.log('hash is ' + hash);\n            const user = new User(\n              {\n                username: usernameStripped,\n                password: hash,\n                email: req.body.email,\n                city: req.body.city,\n                state: req.body.state,\n                requests: null,\n                games: null\n              }\n            );\n\n            user.save((err) => {\n              if (err) { throw err; }\n            });\n\n            res.json({\n              validation: 'valid',\n              redirect: '/Dashboard'\n            });\n          });\n        });\n      } else {\n        res.json({validation: 'User already exists.'});\n      }\n    });\n});\n\n// ** GAME ACTIONS ***//\n\napp.get('/findGame/:console/:game', (req, res) => {\n  let searchResults = [];\n\n  client.games({\n    fields: ['id', 'name', 'cover', 'summary', 'developers', 'screenshots'],\n    // fields: '*',\n    search: req.params.game,\n    filters: {\n      'release_dates.platform-eq': req.params.console,\n    },\n    limit: 15, // Limit to 5 results\n    offset: 0 // Index offset for results\n  }).then((response) => {\n    const result = response.body;\n\n    result.forEach((game) => {\n      if (game.cover) {\n        const coverImage = client.image({\n          cloudinary_id: game.cover.cloudinary_id},\n        'cover_small',\n        'jpg'\n        );\n\n        // convert and add screenshots\n        const screenShots = [];\n\n        if (game.screenshots) {\n          game.screenshots.map((screenshot) => {\n            const screenShotURL = client.image({\n              cloudinary_id: screenshot.cloudinary_id},\n            'screenshot_med',\n            'jpg'\n            );\n            screenShots.push(screenShotURL);\n          });\n        }\n\n        searchResults = searchResults.concat([\n          {\n            id: game.id,\n            name: game.name,\n            summary: game.summary,\n            cover: coverImage,\n            gameConsole: req.params.console,\n            screenshots: screenShots,\n          }]);\n      }\n    });\n\n    res.json(JSON.stringify(searchResults));\n  }).catch((error) => {\n    throw error;\n  });\n});\n\napp.get('/getAllGames', (req, res) => {\n  let allGames = [];\n  User.find({}).lean()\n    .then((users) => {\n      users.forEach((user) => {\n        if (user.games) {\n          if (user.games[0].owner != req.session.user) {\n            allGames = allGames.concat(user.games);\n          }\n        }\n      });\n\n      res.json(allGames);\n    }).catch((err) => {\n      throw err;\n    });\n});\n\napp.get('/getUserGames', (req, res) => {\n  console.log(req.session.user);\n  User.findOne({username: req.session.user}).lean()\n    .then((user) => {\n      if (user.games) {\n        res.json(user.games);\n      } else {\n        res.json([]);\n      }\n    });\n});\n\napp.post('/addGame', (req, res) => {\n  User.findOne({username: req.session.user}).lean()\n    .then((user) => {\n      const modifiedUser = Object.assign({}, user);\n\n      const gametoAdd = Array.from(req.body);\n      gametoAdd[0].owner = req.session.user; // append owner info to added game\n\n      const newGameColl = modifiedUser.games === null ? gametoAdd :\n        Array.from(modifiedUser.games).concat(gametoAdd);\n\n      User.findOneAndUpdate({username: req.session.user}, {games: newGameColl})\n        .then(() => {\n          res.json(req.body);\n        });\n    });\n});\n\napp.post('/removeGame', (req, res) => {\n  User.findOne({username: req.session.user}).lean()\n    .then((user) => {\n      const modifiedUser = Object.assign({}, user);\n\n      const newGameColl = Array.from(modifiedUser.games).filter((game) => {\n        if (req.body.id != game.id) {\n          return game;\n        }\n      });\n\n      User.findOneAndUpdate({username: req.session.user}, {games: newGameColl})\n        .then(() => {\n          res.json(newGameColl);\n        });\n    });\n});\n\napp.post('/declineTrade', (req, res) => {\n  const traderGameToReceive = Object.assign({}, req.body.offeredGame); // from tradee to trader\n  const tradeeGameToReceive = Object.assign({}, req.body.requestedGame); // from trader to tradee\n\n  User.findOne({username: req.session.user}).lean()\n    .then((user) => {\n      const userRequests = user.requests.filter((request) => {\n        if (request.requestedGame.id != req.body.requestedGame.id &&\n            request.offeredGame.id != req.body.offeredGame.id) {\n          return request;\n        }\n      });\n\n      User.findOneAndUpdate({username: req.session.user}, {requests: userRequests})\n        .then(() => {\n          User.findOne({username: req.body.requestedGame.owner}).lean()\n            .then((owner) => {\n              const ownerRequests = Array.from(owner.requests);\n              ownerRequests.map((request) => {\n                if (request.requestedGame.id === traderGameToReceive.id &&\n                  request.offeredGame.id === tradeeGameToReceive.id) {\n                  request.status = req.body.type;\n                }\n              });\n\n              User.findOneAndUpdate(\n                {username: req.body.requestedGame.owner},\n                {requests: ownerRequests})\n                .then(() => {\n                  res.json(userRequests);\n                });\n            });\n        });\n    });\n});\n\n// complete trade for trader after tradee accepts trade\napp.post('/completeTrade', (req, res) => {\n  const traderGameToReceive = Object.assign({}, req.body.offeredGame); // from tradee to trader\n  const tradeeGameToReceive = Object.assign({}, req.body.requestedGame); // from trader to tradee\n  const gameTradee = req.session.user;\n  const gameTrader = req.body.requestedGame.owner;\n\n  // perform exchange on trader library\n  User.findOne({username: gameTrader}).lean()\n    .then((trader) => {\n      let traderGames = Array.from(trader.games);\n      const traderRequests = Array.from(trader.requests);\n\n      // remove game from trader's library\n      traderGames = traderGames.filter((game) => {\n        if (game.id != tradeeGameToReceive.id) {\n          return game;\n        }\n      });\n\n      // change status for request to accept\n      traderRequests.map((request) => {\n        if (request.requestedGame.id === traderGameToReceive.id &&\n            request.offeredGame.id === tradeeGameToReceive.id) {\n          request.status = 'Accepted';\n        }\n      });\n\n      // change owner of game to new owner\n      traderGameToReceive.owner = gameTrader;\n\n      // add game to trader's library\n      traderGames = traderGames.concat([traderGameToReceive]);\n\n      User.findOneAndUpdate({username: gameTrader}, {games: traderGames, requests: traderRequests})\n        .then(() => {\n          // perform exchange on tradee library\n          User.findOne({username: gameTradee}).lean()\n            .then((tradee) => {\n              let tradeeGames = Array.from(tradee.games);\n              // remove game from tradee's library\n              tradeeGames = tradeeGames.filter((game) => {\n                if (game.id != traderGameToReceive.id) {\n                  return game;\n                }\n              });\n\n              // change owner of game to new owner\n              tradeeGameToReceive.owner = gameTradee;\n\n              // add game to tradee's library\n              tradeeGames = tradeeGames.concat([tradeeGameToReceive]);\n\n              User.findOneAndUpdate({username: gameTradee}, {games: tradeeGames})\n                .then(() => {\n                  res.json(tradeeGames);\n                });\n            });\n        });\n    });\n});\n\n// **** REQUEST ACTIONS *****/////\n\napp.post('/addRequest', (req, res) => {\n  User.findOne({username: req.session.user}).lean()\n    .then((user) => {\n      const retrievedUser = Object.assign({}, user);\n      const userRequests = retrievedUser.requests === null ? Array.from(req.body) :\n        Array.from(retrievedUser.requests).concat(req.body);\n\n      User.findOneAndUpdate({username: req.session.user}, {requests: userRequests})\n        .then(() => {\n          const incomingRequest = Object.assign({}, req.body[0]);\n          // create request for recipient of trade offer and append to their requests\n          const newRequest = {\n            status: 'Pending',\n            requestedGame: incomingRequest.offeredGame,\n            offeredGame: incomingRequest.requestedGame,\n            path: 'incoming',\n          };\n\n          // find target owner of requested game\n          User.findOne({username: incomingRequest.requestedGame.owner}).lean()\n            .then((user) => {\n              const targetUser = Object.assign({}, user);\n\n              // add request\n              const targetUserRequests = targetUser.requests === null ? Array.from([newRequest]) :\n                Array.from(targetUser.requests).concat([newRequest]);\n              // update target owner's request\n              User.findOneAndUpdate(\n                {username: incomingRequest.requestedGame.owner},\n                {requests: targetUserRequests})\n                .then(() => {\n                  res.json(req.body);\n                });\n            });\n        });\n    });\n});\n\napp.post('/removeRequest', (req, res) => {\n  User.findOne({username: req.session.user}).lean()\n    .then((user) => {\n      const userRequests = user.requests.filter((request) => {\n        if (request.requestedGame.id != req.body.requestedGameId &&\n            request.offeredGame.id != req.body.offeredGameId) {\n          return request;\n        }\n      });\n\n      User.findOneAndUpdate({username: req.session.user}, {requests: userRequests})\n        .then(() => {\n          res.json(userRequests);\n        });\n    });\n});\n\napp.get('/getUserRequests', (req, res) => {\n  User.findOne({username: req.session.user}).lean()\n    .then((user) => {\n      if (user.requests) {\n        res.json(user.requests);\n      } else {\n        res.json([]);\n      }\n    });\n});\n\napp.get('*', (req, res) => {\n  res.sendFile(path.resolve(__dirname, '../static', 'index.html'));\n});\n\napp.listen(3000, () => {\n  console.log('App started again');\n});\n"]}