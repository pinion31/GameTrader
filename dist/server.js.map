{"version":3,"sources":["../server/server.js"],"names":["express","require","path","logger","cookieParser","bodyParser","mongoose","connect","Promise","global","session","MongoStore","db","connection","app","client","process","env","IGDB_KEY","use","json","urlencoded","extended","static","secret","saveUninitialized","resave","cookie","maxAge","httpOnly","store","mongooseConnection","ttl","post","req","res","user","body","username","console","log","save","err","redirect","password","email","city","state","requests","games","get","searchResults","fields","search","params","game","filters","limit","offset","then","response","result","forEach","cover","coverImage","image","cloudinary_id","screenShots","screenshots","map","screenshot","screenShotURL","push","concat","id","name","summary","gameConsole","JSON","stringify","catch","error","allGames","find","lean","users","owner","findOne","modifiedUser","Object","assign","gametoAdd","Array","from","newGameColl","findOneAndUpdate","filter","traderGameToReceive","offeredGame","tradeeGameToReceive","requestedGame","userRequests","request","ownerRequests","status","type","gameTradee","gameTrader","trader","traderGames","traderRequests","tradee","tradeeGames","retrievedUser","incomingRequest","newRequest","targetUser","targetUserRequests","requestedGameId","offeredGameId","sendFile","resolve","__dirname","listen"],"mappings":"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","file":"server.js","sourcesContent":["const express = require('express');\nconst path = require('path');\nconst logger = require('morgan');\nconst cookieParser = require('cookie-parser');\nconst bodyParser = require('body-parser');\nconst mongoose = require('mongoose');\nmongoose.connect('mongodb://localhost/local');\nmongoose.Promise = global.Promise;\n\nconst session = require('express-session');\nconst MongoStore = require('connect-mongo')(session);\n\nconst db = mongoose.connection;\nimport igdb from 'igdb-api-node';\nimport User from './models/User';\n\nconst app = express();\n\n\nconst client = igdb(process.env.IGDB_KEY);\n// uncomment after placing your favicon in /public\n//app.use(favicon(path.join(__dirname, 'public', 'favicon.ico')));\napp.use(logger('dev'));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(cookieParser());\n//app.use(express.static(path.join(__dirname, '../static')));\napp.use(express.static('static'));\n\napp.use(session({\n  secret: 'noodles',\n  saveUninitialized: true,\n  resave: true,\n  cookie: {maxAge: 1000 * 60 * 60 * 24 * 2, httpOnly: false}, // 2 days\n  store: new MongoStore({mongooseConnection: db, ttl: 2 * 24 * 60 * 60})\n}));\n\n//**** USER ACTIONS ***///\napp.post('/loginUser', (req, res) => {\n  if (typeof req.session.user === 'undefined') {\n    req.session.user = req.body.username;\n    console.log('resaving session');\n    req.session.save((err) => {\n\n      if(err){\n        console.log('error with session');\n      }\n      else {\n        res.json({redirect: '/'});\n      }\n\n    });\n  }\n  else if (req.session.user != req.body.username) {\n      req.session.user = req.body.username;\n      req.session.save((err) => {\n          if(err){\n            console.log('error with session');\n          }\n          else {\n            res.json({redirect: '/'});\n          }\n        });\n  } else {\n    res.json({redirect: '/'});\n  }\n});\n\napp.post('/addUser', (req, res) => {\n  const user = new User(\n    {\n      username: req.body.username,\n      password: req.body.password,\n      email: req.body.email,\n      city: req.body.city,\n      state: req.body.state,\n      requests: null,\n      games: null\n    }\n  );\n\n  user.save((err) => {\n    if (err) {throw err};\n  });\n});\n\n//** GAME ACTIONS ***//\n\napp.get('/findGame/:console/:game', (req,res) => {\n  let searchResults = [];\n\n  client.games({\n    fields: ['id', 'name', 'cover', 'summary', 'developers', 'screenshots'],\n    // fields: '*',\n    search: req.params.game,\n    filters: {\n      'release_dates.platform-eq': req.params.console,\n    },\n    limit: 15, // Limit to 5 results\n    offset: 0 // Index offset for results\n  }).then((response) => {\n    const result = response.body;\n\n    result.forEach((game) => {\n      if (game.cover) {\n        const coverImage = client.image({\n          cloudinary_id: game.cover.cloudinary_id},\n          'cover_small',\n          'jpg'\n        );\n\n        //convert and add screenshots\n        let screenShots = [];\n\n        if (game.screenshots) {\n          game.screenshots.map((screenshot) => {\n            const screenShotURL = client.image({\n              cloudinary_id: screenshot.cloudinary_id},\n              'screenshot_med',\n              'jpg'\n            );\n            screenShots.push(screenShotURL);\n          });\n        }\n\n        searchResults = searchResults.concat([\n          {\n            id: game.id,\n            name: game.name,\n            summary: game.summary,\n            cover: coverImage,\n            gameConsole: req.params.console,\n            screenshots:  screenShots,\n            // developer: result.developer,\n            // publisher: result.publishers,\n          }]);\n      }\n    });\n\n    res.json(JSON.stringify(searchResults));\n  }).catch((error) => {\n      throw error;\n    });\n});\n\napp.get('/getAllGames', (req, res) => {\n  let allGames = [];\n  User.find({}).lean()\n    .then((users) => {\n      users.forEach((user) => {\n        if (user.games) {\n          if (user.games[0].owner != req.session.user) {\n            allGames = allGames.concat(user.games);\n          }\n        }\n      });\n\n      res.json(allGames);\n    }).catch((err) => {\n      throw err;\n    });\n\n});\n\napp.get('/getUserGames', (req, res) => {\n  User.findOne({username: req.session.user}).lean()\n    .then((user) => {\n      if (user.games) {\n        res.json(user.games);\n      } else {\n        res.json([]);\n      }\n    });\n});\n\napp.post('/addGame', (req, res) => {\n  User.findOne({username: req.session.user}).lean()\n    .then((user) => {\n      const modifiedUser = Object.assign({}, user);\n\n      const gametoAdd = Array.from(req.body);\n      gametoAdd[0].owner = req.session.user; //append owner info to added game\n\n      const newGameColl = modifiedUser.games === null? gametoAdd:\n        Array.from(modifiedUser.games).concat(gametoAdd);\n\n      User.findOneAndUpdate({username: req.session.user}, {games: newGameColl})\n        .then(() => {\n          res.json(req.body);\n        });\n    });\n});\n\napp.post('/removeGame', (req, res) => {\n  User.findOne({username: req.session.user}).lean()\n    .then((user) => {\n      const modifiedUser = Object.assign({}, user);\n\n      const newGameColl = Array.from(modifiedUser.games).filter((game) => {\n        if (req.body.id != game.id) {\n          return game;\n        }\n      });\n\n      User.findOneAndUpdate({username: req.session.user}, {games: newGameColl})\n        .then(() => {\n          res.json(newGameColl);\n        });\n    });\n});\n\napp.post('/declineTrade', (req,res) => {\n  const traderGameToReceive = Object.assign({}, req.body.offeredGame); //from tradee to trader\n  const tradeeGameToReceive = Object.assign({}, req.body.requestedGame); //from trader to tradee\n\n  User.findOne({username: req.session.user}).lean()\n    .then((user) => {\n      let userRequests = user.requests.filter((request) => {\n        if (request.requestedGame.id != req.body.requestedGame.id &&\n            request.offeredGame.id != req.body.offeredGame.id) {\n          return request;\n        }\n      });\n\n      User.findOneAndUpdate({username: req.session.user}, {requests: userRequests})\n        .then(() => {\n          User.findOne({username: req.body.requestedGame.owner}).lean()\n            .then((owner) => {\n              let ownerRequests = Array.from(owner.requests);\n              ownerRequests.map((request) => {\n                if (request.requestedGame.id === traderGameToReceive.id &&\n                  request.offeredGame.id === tradeeGameToReceive.id) {\n                  request.status = req.body.type;\n                }\n              });\n\n              User.findOneAndUpdate({username: req.body.requestedGame.owner}, {requests: ownerRequests})\n                .then(() => {\n                  res.json(userRequests);\n                });\n            });\n        });\n    });\n\n});\n\n// complete trade for trader after tradee accepts trade\napp.post('/completeTrade', (req,res) => {\n  const traderGameToReceive = Object.assign({},req.body.offeredGame); //from tradee to trader\n  const tradeeGameToReceive = Object.assign({},req.body.requestedGame); //from trader to tradee\n  const gameTradee = req.session.user; req.body.requestedGame.owner;\n  const gameTrader = req.body.requestedGame.owner;\n\n  // perform exchange on trader library\n  User.findOne({username: gameTrader}).lean()\n    .then((trader) => {\n      let traderGames = Array.from(trader.games);\n      let traderRequests = Array.from(trader.requests);\n\n      // remove game from trader's library\n      traderGames = traderGames.filter((game) => {\n        if (game.id != tradeeGameToReceive.id) {\n          return game;\n        }\n      });\n\n      // change status for request to accept\n      traderRequests.map((request) => {\n        if (request.requestedGame.id === traderGameToReceive.id &&\n            request.offeredGame.id === tradeeGameToReceive.id) {\n          request.status = 'Accepted';\n        }\n      });\n\n      //change owner of game to new owner\n      traderGameToReceive.owner = gameTrader;\n\n      // add game to trader's library\n      traderGames = traderGames.concat([traderGameToReceive]);\n\n      User.findOneAndUpdate({username: gameTrader}, {games: traderGames, requests: traderRequests})\n        .then(() => {\n\n            // perform exchange on tradee library\n            User.findOne({username: gameTradee}).lean()\n              .then((tradee) => {\n                let tradeeGames = Array.from(tradee.games);\n\n                // remove game from tradee's library\n                tradeeGames = tradeeGames.filter((game) => {\n                  if (game.id != traderGameToReceive.id) {\n                    return game;\n                  }\n                });\n\n                //change owner of game to new owner\n                tradeeGameToReceive.owner = gameTradee;\n\n                // add game to tradee's library\n                tradeeGames = tradeeGames.concat([tradeeGameToReceive]);\n\n                User.findOneAndUpdate({username: gameTradee}, {games: tradeeGames})\n                  .then(() => {\n                    res.json(tradeeGames);\n                  });\n                });\n        });\n    });\n\n});\n\n//**** REQUEST ACTIONS *****/////\n\napp.post('/addRequest', (req, res) => {\n  User.findOne({username: req.session.user}).lean()\n    .then((user) => {\n      const retrievedUser = Object.assign({}, user);\n      const userRequests = retrievedUser.requests === null?Array.from(req.body):\n        Array.from(retrievedUser.requests).concat(req.body);\n\n      User.findOneAndUpdate({username: req.session.user}, {requests: userRequests})\n        .then(() => {\n\n          const incomingRequest = Object.assign({},req.body[0]);\n          //create request for recipient of trade offer and append to their requests\n          const newRequest = {\n            status: 'Pending',\n            requestedGame: incomingRequest.offeredGame,\n            offeredGame: incomingRequest.requestedGame,\n            path: 'incoming',\n          };\n\n          // find target owner of requested game\n          User.findOne({username: incomingRequest.requestedGame.owner}).lean()\n            .then(user => {\n              const targetUser = Object.assign({}, user);\n\n              // add request\n              const targetUserRequests = targetUser.requests === null?Array.from([newRequest]):\n                Array.from(targetUser.requests).concat([newRequest]);\n              // update target owner's request\n              User.findOneAndUpdate({username: incomingRequest.requestedGame.owner}, {requests: targetUserRequests})\n                .then(() => {\n                  res.json(req.body);\n                })\n            });\n        });\n    });\n});\n\napp.post('/removeRequest', (req, res) => {\n  User.findOne({username: req.session.user}).lean()\n    .then((user) => {\n      let userRequests = user.requests.filter((request) => {\n        if (request.requestedGame.id != req.body.requestedGameId &&\n            request.offeredGame.id != req.body.offeredGameId) {\n          return request;\n        }\n      });\n\n      User.findOneAndUpdate({username: req.session.user}, {requests: userRequests})\n        .then(() => {\n          res.json(userRequests);\n        });\n    });\n});\n\napp.get('/getUserRequests', (req, res) => {\n  User.findOne({username: req.session.user}).lean()\n    .then((user) => {\n      if (user.requests) {\n        res.json(user.requests);\n      } else {\n        res.json([]);\n      }\n    });\n});\n\napp.get('*', (req, res) => {\n  res.sendFile(path.resolve(__dirname, '../static', 'index.html'));\n});\n\napp.listen(3000, () => {\n  console.log('App started again');\n});\n\n\n /*\n  client.platforms({\n    fields: '*' , // Return all fields\n   // search: req.params.game,\n    limit: 50, // Limit to 5 results\n    offset: 100 // Index offset for results\n    }).then((response) => {\n        console.dir(response);\n\n\n\n     });*/"]}